@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
<link rel="stylesheet" href="~/css/login.css" asp-append-version="true" />

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var currentUser = await UserManager.GetUserAsync(User);
        var nombreUsuario = currentUser?.Nombre ?? User.Identity?.Name; // Cambia 'Nombre' por el campo adecuado si es necesario
        var roles = await UserManager.GetRolesAsync(currentUser);
        var rolesMostrar = roles.Where(r => r == "Moderador" || r == "Administrador").ToList();

        <li class="nav-item">
            <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                <i class="fas fa-user me-1" style="color: #FFD700;"></i>
                Hola, @nombreUsuario!
            </a>
            @if (rolesMostrar.Any())
            {
                <div class="centrado-rol">
                    <span class="text-white">@string.Join(", ", rolesMostrar)</span>
                </div>
            }
        </li>


        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link">
                    <i class="fas fa-sign-out-alt"></i> Cerrar Sesión
                </button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Register">
                Registro <i class="fa-solid fa-user-plus"></i>
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">
                Acceso <i class="fa-solid fa-right-to-bracket"></i>
            </a>
        </li>
    }
</ul>